import{defaults}from"./defaults.js";import{extendParams,isEmpty,isElementInDom,normalizeEventName}from"../../../commonFunctions/index.js";class Validate{constructor(e,s={}){var r=this,s=extendParams(defaults,s);r.extendedParams=s,r.formObject=e,r.form=e.form,r.formElements=r.form.elements,r.isSubmitted=!1,r.fields={},r.extendedParams={...defaults,...s},r.callbacks=new Map,r.setForm()}getFieldObject(e){return"object"==typeof e?e:this.fields[e]}addField(e,s,r={}){var a=this,t=a.formElements[e];return a.fields[e]={elem:t,rules:s,isValid:!1,config:r},a.extendedParams.validationOnChange.on?a.formObject.setListenerOnField(t,a.validationOnFieldChange.bind(a),"validationOnFieldChange"):a.extendedParams.validationOnBlur.on&&a.formObject.addListener("blur",t,a.validationOnFieldBlur.bind(a),"validationOnFieldBlur"),a}removeField(e){var s=this,r=s.getFieldObject(e),a=s.formObject.getListenerType(r.elem.type);for(const t of s.eventHandlers)s.formObject.removeListener(a,r.elem,t);return s.deleteErrors(r),delete s.fields.field,s}setForm(){var e=this;e.form.setAttribute("novalidate","novalidate"),e.formObject.addListener("submit",e.form,e=>e.preventDefault(),"preventDefault"),e.formObject.addListener("submit",e.form,e.validationOnSubmit.bind(e),"validationOnSubmit")}validationOnSubmit(e){e.preventDefault(),this.isSubmitted=!0,this.validateOnSubmit()}validateOnSubmit(){var e=this;if(e.isSubmitted){for(const s of Object.keys(e.fields))e.validateField(s),e.setViewOnField(s);e.isFormValid()?(e.callbacks.has("onSuccessSubmit")&&e.callbacks.get("onSuccessSubmit")(),e.refresh()):(e.extendedParams.errorMessages.on&&(e.renderErrors(),e.showErrors()),e.callbacks.has("onFailSubmit")&&e.callbacks.get("onFailSubmit")())}}validateField(e){var s=this;const r=s.fields[e];r.isValid=!0;for(const a of r.rules)if(s.validateFieldRule(r,a),!r.isValid){s.extendedParams.errorMessages.on&&(r.errorMessage=a.errorMessage);break}}validateFieldRule(e,s){var r=this.formObject.getElemValue(e.elem);"required"===s.value?isEmpty(r)&&(e.isValid=!1):s.validator(r)||(e.isValid=!1)}isFormValid(){let e=!0;for(const s of Object.values(this.fields))if(!s.isValid){e=!1;break}return e}isFieldValid(e){e="object"==typeof e?e:this.fields[e];return this.extendedParams.errorMessages.on?e.isValid&&Object.prototype.hasOwnProperty.call(e,"errorMessage"):e.isValid}setViewOnField(e){var s=this["extendedParams"];const r="object"==typeof e?e:this.fields[e];r.isValid?(r.elem.classList.remove(...s.defaultsClasses.invalidFieldClass),s.validViewOfField.on&&r.elem.classList.add(...s.defaultsClasses.validFieldClass)):(r.elem.classList.remove(...s.defaultsClasses.validFieldClass),s.invalidViewOfField.on&&r.elem.classList.add(...s.defaultsClasses.invalidFieldClass))}clearFields(){for(const e of Object.values(this.fields))e.elem.value=""}refresh(){var e=this;e.isSubmitted=!1,e.clearFields(),e.extendedParams.errorMessages.on&&(e.renderErrors(),e.deleteWrapperForMessages())}validationOnFieldChange(e){e.target&&this.isSubmitted&&this.validateOnFieldChange(e.target)}validateOnFieldChange(e){var s=this;let r;for(const a of Object.keys(s.fields))if(s.fields[a].elem===e){r=a;break}r&&(s.validateField(r),s.setViewOnField(r),s.extendedParams.errorMessages.on&&(s.renderErrors(r),s.showErrors(r)),s.isFieldValid(r)?s.callbacks.has("onSuccessChange")&&s.callbacks.get("onSuccessChange")():s.callbacks.has("onFailChange")&&s.callbacks.get("onFailChange")())}validationOnFieldBlur(e){e.target&&this.validateOnFieldBlur(e.target)}validateOnFieldBlur(e){var s=this;let r;for(const a of Object.keys(s.fields))if(s.fields[a].elem===e){r=a;break}r&&(s.validateField(r),s.setViewOnField(r),s.extendedParams.errorMessages.on&&(s.renderErrors(r),s.showErrors(r)),s.isFieldValid(r)?s.callbacks.has("onSuccessBlur")&&s.callbacks.get("onSuccessBlur")():s.callbacks.has("onFailBlur")&&s.callbacks.get("onFailBlur")())}renderErrors(e=null){var s=this,r=s.getFieldObject(e);if(e)if(r.isValid)r.isValid&&s.deleteErrors(r);else{const t=s.getContainerForErrorText(r);e=r["errorMessage"];t.textContent=e}else for(const i of Object.values(s.fields))if(i.isValid)s.deleteErrors(i);else{const l=s.getContainerForErrorText(i);var a=i["errorMessage"];l.textContent=a}}getWrapperForMessages(){var e=this;if(!Object.prototype.hasOwnProperty.call(e,"messagesWrapper"))if(e.messagesWrapper=document.createElement("div"),e.messagesWrapper.classList.add(...e.extendedParams.defaultsClasses.messagesWrapperClass),e.form.querySelector("button")){const s=e.form.querySelectorAll("button")[e.form.querySelectorAll("button").length-1];s.before(e.messagesWrapper)}else e.form.append(e.messagesWrapper)}deleteWrapperForMessages(){var e=this;isElementInDom(e.messagesWrapper)&&e.messagesWrapper.parentNode.removeChild(e.messagesWrapper),Object.prototype.hasOwnProperty.call(e,"messagesWrapper")&&delete e.messagesWrapper}getContainerForErrorText(e){const s=this.getFieldObject(e);if(Object.prototype.hasOwnProperty.call(s.config,"errorsContainer")){e=s.config["errorsContainer"];s.config.errorsContainer="object"==typeof e?e:this.form.querySelector(e)}else{s.config.errorsContainer=document.createElement("div");const r=s.config["errorsContainer"];e=this.extendedParams["defaultsClasses"];r.classList.add(...e.messageClass),r.classList.add(...e.errorClass)}return s.config.errorsContainer}showErrors(e=null){const s=this;var r=s.getFieldObject(e);function a(e){e.isValid||(e=e.config["errorsContainer"],s.messagesWrapper.append(e))}function t(e){var s;e.isValid||(s=e.config["errorsContainer"],e.elem.after(s))}if(s.extendedParams.errorMessages.allMessagesTogether)if(s.getWrapperForMessages(),e)isElementInDom(r.config.errorsContainer)||(a(r),s.isFormValid()&&s.deleteWrapperForMessages());else for(const i of Object.values(s.fields))a(i);else if(e)isElementInDom(r.config.errorsContainer)||t(r);else for(const l of Object.values(s.fields))t(l)}deleteErrors(e){const s=this.getFieldObject(e);if(this.isFieldValid(s)){const r=s.config["errorsContainer"];r.parentNode.removeChild(r),delete s.errorMessage}}onSuccess(e,s){s=normalizeEventName(s);return this.callbacks.set("onSuccess"+s,e),this}onFail(e,s){s=normalizeEventName(s);return this.callbacks.set("onFail"+s,e),this}}export{Validate};